#!/usr/bin/env node
const container = require('@google-cloud/container');

const projectId = process.env.GOOGLE_PROJECT_ID
const region = process.env.GOOGLE_COMPUTE_REGION
const cluster = process.env.GOOGLE_CLUSTER_NAME

const client = new container.v1.ClusterManagerClient()
const clusterSpec = {
  clusterId: cluster,
  projectId: projectId,
  zone: region
}
console.log('acting on', clusterSpec)

async function setDesiredMasterAuthorizedNetworksConfig(config) {
  return client.updateCluster({
    ...clusterSpec,
    update: {
      desiredMasterAuthorizedNetworksConfig: config
    }
  })
}


async function add(cidr, currentConfig) {
  currentConfig.cidrBlocks.push({
    displayName: `punched-${(new Date()).toISOString()}`,
    cidrBlock: cidr
  })
  return setDesiredMasterAuthorizedNetworksConfig(currentConfig)
}

async function rm(cidr, currentConfig) {
  const index = currentConfig.cidrBlocks.findIndex(cidrBlock =>
    cidrBlock.cidrBlock === cidr && cidrBlock.displayName.startsWith('punched-')
  )

  if (index === -1) {
    console.log('cidr not found')
    process.exit(2)
  }

  console.log('removing', currentConfig.cidrBlocks.splice(index, 1)[0])
  return setDesiredMasterAuthorizedNetworksConfig(currentConfig)
}

function help() {
  console.log('usage: index.js add|rm <cidr>')
  process.exit(1)
}

async function main() {
  const clusterData = await client.getCluster(clusterSpec)
  const currentConfig = clusterData[0].masterAuthorizedNetworksConfig
  console.log('current config', currentConfig)

  const [action, cidr] = process.argv.slice(2)

  if (!action || !cidr) return help()

  if (action === 'add') return add(cidr, currentConfig)
  if (action === 'rm') return rm(cidr, currentConfig)

  help()
}


main()
